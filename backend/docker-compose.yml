services:
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Str0ng!P@ssw0rd!"
      ACCEPT_EULA: "Y"
    ports:
      - "11433:1433"
    volumes:
      - mssql-data:/var/opt/mssql

  mssql-init:
    image: mcr.microsoft.com/mssql-tools
    depends_on:
      - mssql
    entrypoint: >
      bash -c "
        for i in {1..30}; do
          /opt/mssql-tools/bin/sqlcmd -S mssql -U sa -P 'Str0ng!P@ssw0rd!' -Q 'SELECT 1' && break
          echo 'Waiting for SQL Server to be ready...'
          sleep 2
        done &&
        /opt/mssql-tools/bin/sqlcmd -S mssql -U sa -P 'Str0ng!P@ssw0rd!' -Q \"IF DB_ID('brokee') IS NULL CREATE DATABASE brokee\"
      "

  keycloak-db:
    image: postgres:15
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: kcpassword
    ports:
      - "5433:5432"
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data

  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    command:
      - start-dev
      - --import-realm
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak-db
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: kcpassword
      KC_HOSTNAME: localhost
      KC_HOSTNAME_STRICT: false
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - ./realms:/opt/keycloak/data/import
    ports:
      - "8081:8080"
    depends_on:
      - keycloak-db

  sonar-db:
    image: postgres:15
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonarqube
    volumes:
      - sonar-db-data:/var/lib/postgresql/data

  sonarqube:
    image: sonarqube:10.6.0-community
    depends_on:
      - sonar-db
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonar-db:5432/sonarqube
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonar-data:/opt/sonarqube/data
      - sonar-extensions:/opt/sonarqube/extensions
      - sonar-logs:/opt/sonarqube/logs
    ulimits:
      nofile:
        soft: 131072
        hard: 131072
      nproc: 8192

  quarkus:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:sqlserver://mssql:1433;databaseName=brokee;encrypt=true;trustServerCertificate=true
      QUARKUS_DATASOURCE_USERNAME: sa
      QUARKUS_DATASOURCE_PASSWORD: Str0ng!P@ssw0rd!
      QUARKUS_OIDC_AUTH_SERVER_URL: http://keycloak:8080/realms/brokee
      QUARKUS_OIDC_CLIENT_ID: brokee-frontend
      QUARKUS_HTTP_HOST: 0.0.0.0
    depends_on:
      - mssql-init
      - keycloak
    volumes:
      - ./wait-for-it.sh:/app/wait-for-it.sh
      - ./wait-for-keycloak.sh:/app/wait-for-keycloak.sh
    entrypoint: [ "sh", "-c", "./wait-for-it.sh mssql:1433 && ./wait-for-keycloak.sh http://keycloak:8080/realms/brokee/.well-known/openid-configuration java -jar /app/quarkus-run.jar" ]

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    depends_on:
      - quarkus
    networks:
      - default

volumes:
  mssql-data:
  keycloak-db-data:
  sonar-db-data:
  sonar-data:
  sonar-extensions:
  sonar-logs:
